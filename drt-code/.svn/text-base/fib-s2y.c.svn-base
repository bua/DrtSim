/* VERSION 3.0.0 */
/* THIS CODE IS AUTOMATICALLY GENERATED BY THE S2 TOOL */
#define TSU_PRELOAD_FRAME
#include "tsu.h"
#include <stdio.h>

extern uint64_t df_ts0[100],df_ts1[100];
extern uint64_t df_tt;

int main();
void fib_rc(void);
void main_1(void);
void fib_rc_1(void);
void fib_rc_7(void);
void main_2(void);
void exit1(void);
void fib_rc_6(void);
void fib_rc_2(void);
void fib_rc_5(void);
void fib_rc_3(void);
void fib_rc_4(void);

int _V2
[] = { 102,
114,
61,
37,
100,
10,
0,
};
int next
[] = { 1, 
};
int _rand48_seed
[] = { 13070,
43981,
4660,
};
int _rand48_mult
[] = { 58989,
57068,
5,
};
int _rand48_add
[] = { 11, 
};
int sseed_v101
[6] = { 0, 
};

int main()
{
	df_tt = df_tstamp(df_ts0);
	uint64_t R7 = 0;
	uint64_t R3 = (uint64_t)fib_rc;
	uint64_t R5 = df_tschedule_cond((void *)R3, 2, 1);
	uint64_t R4 = (uint64_t)20;
	uint64_t R6 = (uint64_t)main_1;
	uint64_t R2 = df_tschedule_cond((void *)R6, 3, 1);
	df_write(R2,5, R4);
	df_write(R2,2, R7);
	df_write(R5,2, R2);
	df_write(R5,5, R4);
	df_destroy();
	return 0;
}

void fib_rc()
{
	df_ldframe();
	uint64_t R3 = df_frame(5);
	uint64_t R7 = df_frame(2);
	uint64_t R2 = ((int64_t)R3 == (int64_t)0);
	uint64_t R8 = R2;
	uint64_t R6 = (uint64_t)0;
	uint64_t R4 = (uint64_t)fib_rc_7;
	R6 = df_tschedule_cond((void *)R4, 2, R8);
	R8 = ! R8;
	R4 = (uint64_t)fib_rc_1;
	R6 |= df_tschedule_cond((void *)R4, 2, R8);
	df_write(R6,5, R3);
	df_write(R6,2, R7);
	df_destroy();
}

void main_1()
{
	df_ldframe();
	uint64_t R2 = df_frame(5);
	R2 = df_frame(4);
	uint64_t R6 = df_frame(2);
	uint64_t R1 = (uint64_t)102;
	putchar(R1);
	R1 = (uint64_t)114;
	putchar(R1);
	R1 = (uint64_t)61;
	putchar(R1);
	printf("%ld", R2);
	R1 = (uint64_t)10;
	putchar(R1);
	uint64_t R3 = (uint64_t)exit1;
	uint64_t R4 = df_tschedule_cond((void *)R3, 2, 1);
	uint64_t R5 = (uint64_t)main_2;
	R2 = df_tschedule_cond((void *)R5, 2, 1);
	df_write(R2,2, R6);
	df_write(R4,2, R2);
	df_write(R4,5, 0);
	df_destroy();
}

void fib_rc_1()
{
	df_ldframe();
	uint64_t R3 = df_frame(5);
	uint64_t R7 = df_frame(2);
	uint64_t R2 = (uint64_t)1;
	uint64_t R4 = ((int64_t)R3 == (int64_t)R2);
	uint64_t R8 = R4;
	uint64_t R6 = (uint64_t)0;
	R4 = (uint64_t)fib_rc_6;
	R6 = df_tschedule_cond((void *)R4, 2, R8);
	R8 = ! R8;
	R4 = (uint64_t)fib_rc_2;
	R6 |= df_tschedule_cond((void *)R4, 2, R8);
	df_write(R6,5, R3);
	df_write(R6,2, R7);
	df_destroy();
}

void fib_rc_7()
{
	df_ldframe();
	uint64_t R5 = df_frame(2);
	uint64_t R4 = (uint64_t)fib_rc_5;
	uint64_t R2 = df_tschedule_cond((void *)R4, 2, 1);
	df_write(R2,5, 0);
	df_write(R2,2, R5);
	df_destroy();
}

void main_2()
{
	df_ldframe();
	uint64_t R2 = df_frame(4);
	R2 = df_frame(2);
	df_write(R2,4, 0);
	df_destroy();
}

void exit1()
{
	df_ldframe();
	df_destroy();
	df_exit();
}

void fib_rc_6()
{
	df_ldframe();
	uint64_t R6 = df_frame(2);
	uint64_t R5 = (uint64_t)1;
	uint64_t R4 = (uint64_t)fib_rc_5;
	uint64_t R2 = df_tschedule_cond((void *)R4, 2, 1);
	df_write(R2,5, R5);
	df_write(R2,2, R6);
	df_destroy();
}

void fib_rc_2()
{
	df_ldframe();
	uint64_t R3 = df_frame(5);
	uint64_t R8 = df_frame(2);
	uint64_t R4 = (uint64_t)fib_rc;
	uint64_t R6 = df_tschedule_cond((void *)R4, 2, 1);
	uint64_t R2 = (uint64_t)1;
	uint64_t R5 = R3 - R2;
	uint64_t R7 = (uint64_t)fib_rc_3;
	R2 = df_tschedule_cond((void *)R7, 4, 1);
	df_write(R2,5, R3);
	df_write(R2,6, R5);
	df_write(R2,2, R8);
	df_write(R6,2, R2);
	df_write(R6,5, R5);
	df_destroy();
}

void fib_rc_5()
{
	df_ldframe();
	uint64_t R3 = df_frame(5);
	uint64_t R2 = df_frame(2);
	df_write(R2,4, R3);
	df_destroy();
}

void fib_rc_3()
{
	df_ldframe();
	uint64_t R3 = df_frame(5);
	uint64_t R7 = df_frame(6);
	R7 = df_frame(4);
	uint64_t R8 = df_frame(2);
	uint64_t R4 = (uint64_t)fib_rc;
	uint64_t R5 = df_tschedule_cond((void *)R4, 2, 1);
	uint64_t R2 = (uint64_t)2;
	R4 = R3 - R2;
	uint64_t R6 = (uint64_t)fib_rc_4;
	R2 = df_tschedule_cond((void *)R6, 4, 1);
	df_write(R2,5, R7);
	df_write(R2,6, R4);
	df_write(R2,2, R8);
	df_write(R5,2, R2);
	df_write(R5,5, R4);
	df_destroy();
}

void fib_rc_4()
{
	df_ldframe();
	uint64_t R7 = df_frame(5);
	uint64_t R2 = df_frame(6);
	R2 = df_frame(4);
	uint64_t R6 = df_frame(2);
	uint64_t R5 = R7 + R2;
	uint64_t R4 = (uint64_t)fib_rc_5;
	R2 = df_tschedule_cond((void *)R4, 2, 1);
	df_write(R2,5, R5);
	df_write(R2,2, R6);
	df_destroy();
}

